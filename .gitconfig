[include]
    path = ~/.gitconfig.local
[core]
    editor = /usr/bin/vim
    pager = less -mS
    quotepath = false
    filemode = false
    autocrlf = false
    symlinks = true
[color]
    ui = auto
[alias]
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; infomation
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    aliass = config --get-regexp alias
    me = config --get-regexp user
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; util
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    cofirst = commit --allow-empty -m 'Initial commit'
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; test
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    taa = add --dry-run
    tbsync = remote prune --dry-run
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; non-destructive
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; add
    a = add
    aa = add --all
    ap = add --patch
    au = add --update
    ;; branch
    b = branch
    ba = branch --all
    ; brc = remote prune ; destructive
    bsync = remote prune ; destructive
    bnow = rev-parse --abbrev-ref HEAD
    ;; log
    l = log --oneline
    ll = log --oneline --topo-order
    lp = !sh -c 'git log --oneline | peco' -
    la = log --format=full --decorate --graph --branches --tags --remotes
    ld = log --oneline --decorate
    lb = log --oneline --decorate --stat
    lx = log --oneline --decorate --graph --branches --tags --remotes
    ;; staths
    s = status
    ;; grep(log)
    glog = !sh -c 'git log --color=always | ~/.script.d/logcolored.pl $1 $2 $3 $4 $5 $6 $7 $8 $9 | less -R' -
    gl   = !sh -c 'git l   --color=always | ~/.script.d/logcolored.pl $1 $2 $3 $4 $5 $6 $7 $8 $9 | less -R' -
    gla  = !sh -c 'git la  --color=always | ~/.script.d/logcolored.pl $1 $2 $3 $4 $5 $6 $7 $8 $9 | less -R' -
    gld  = !sh -c 'git ld  --color=always | ~/.script.d/logcolored.pl $1 $2 $3 $4 $5 $6 $7 $8 $9 | less -R' -
    glb  = !sh -c 'git lb  --color=always | ~/.script.d/logcolored.pl $1 $2 $3 $4 $5 $6 $7 $8 $9 | less -R' -
    glx  = !sh -c 'git lx  --color=always | ~/.script.d/logcolored.pl $1 $2 $3 $4 $5 $6 $7 $8 $9 | less -R' -
    ;; checkout
    c = checkout
    ;cm = checkout master
    cm = checkout main
    cempty = checkout --orphan
    ;; commit
    co = commit
    com = commit --message
    coa = commit --amend
    coan = commit --amend --no-edit
    ;; diff
    d = diff
    ds = diff --cached
    db = diff --stat
    dd = !sh -c 'git diff ${1:-HEAD}~ ${1:-HEAD} $2 $3 $4 $5 $6 $7 $8 $9' -
    ddn = !sh -c 'git diff --name-only ${1:-HEAD}~ ${1:-HEAD} $2 $3 $4 $5 $6 $7 $8 $9' -
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; server change
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; push
    pushme = !sh -c 'git push ${1:-origin} $2 $3 $4 $5 $6 $7 $8 $9 `git rev-parse --abbrev-ref HEAD`' -
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; state change
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    unstage = reset HEAD --
    ; us = reset HEAD --
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; possibility of destruction
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    m = merge --ff
    mf = merge --ff
    mn = merge --no-ff
    ms = merge --squash
    pp = pull
    pprb = pull --rebase
    pprbc = rebase --continue
    pprbs = rebase --skip
    rb = rebase
    rbc = rebase --continue
    rbs = rebase --skip
    rbim = !sh -c 'git rebase -i $(git merge-base ${1:-master} HEAD)' -
    rbin = !sh -c 'git rebase -i HEAD~${1:-$(expr $(git rev-list HEAD | wc -l) - 1)}' -
    ; pc = cherry-pick
    pick = cherry-pick
    pickc = cherry-pick --continue
    ; pcq = cherry-pick --quit
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; destructive
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    brc = remote prune
    fback = !sh -c 'git reset --soft HEAD~${1:-1}' -
    fclean = "!f() { git reset --hard HEAD; git clean --force -d; }; f"
    faclean = "!f() { git reset --hard HEAD; git clean --force -d; git ls-files --others | xargs rm -rf; }; f"
    daspace  = "!f() { git ls-files | xargs sed -i 's/[ ]*$//g'; }; f"
    ddspace  = "!f() { git ls-files --modified | xargs sed -i 's/[ ]*$//g'; }; f"
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; other
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ark = "!f() { ~/.script.d/GitExportDiff.sh ${@}; }; f"
    find = "!f() { find . -type d -name '.git' -prune -o -type f -print; }; f"

